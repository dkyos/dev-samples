// ./gradlew -q -PITER=20

import org.apache.tools.ant.taskdefs.condition.Os

task checkWin() {
	def CMD_PATH='';

	println ("================================");
	if (Os.isFamily(Os.FAMILY_WINDOWS)) {
		println "*** Windows";
		CMD_PATH='C:/tizen-sdk/tools/sdb';
	}else{
		println "*** Not Windwos";
		CMD_PATH='/home/dkyun77/tizen-sdk/tools/sdb';
	}

	project.ext.set("sdbPath", "${CMD_PATH}");
	println (" sdb: " + project.sdbPath);

	int iter = 0;

	if( project.hasProperty("ITER")) {
		iter = "${ITER}".toInteger();
	}else{
		iter = 10;
	}

	project.ext.set("iter", iter);
	println (" iteration: " + project.iter);
	println ("================================");
}

task stress1() << {
	int i = 0;
	def CMD = project.sdbPath;

	while ( i < project.iter ){
		println ("Iteration: " + i++);
		//def process = ["${CMD}","shell", "ls -alh"].execute();
		def process = ["${CMD}","version"].execute();
		process.waitFor();
		println ("Exit value: " + process.exitValue());
		println process.in.text;
		println process.err.text;
		//sleep(1000);
	}
}

task stress2() << {
	int i = 0;
	def CMD = project.sdbPath;

	while ( i < project.iter ){
		println ("Iteration: " + i++);
		def process = ["${CMD}","shell", "pkgcmd -l"].execute();
		process.waitFor();
		println ("Exit value: " + process.exitValue());
		println process.in.text;
		println process.err.text;
	}
}
